#!/bin/bash

# Modeline {
# vim: set foldmarker={,} foldlevel=0 foldmethod=marker sw=4 ts=4 spell:
# }

# Global variables {
	# Source global definitions
	if [ -f /etc/bashrc ]; then
		. /etc/bashrc
	fi

	# Set up vars
	MACHINE=${HOSTNAME%%.*}
	DOMAIN=${HOSTNAME#*.}
	PLATFORM=`uname`
	if [[ 'Cygwin' = `uname -o` ]];  then
		PLATFORM='Linux'
	fi

	# Determine if root
	is_root=false
	if [[ "$UID" = "0" ]]; then
		is_root=true
	fi
# }

# Platform-specific settings {
	# Linux {
	if [ $PLATFORM = "Linux" ] ; then
		#color support of ls
		# eval "`dircolors -b`"
		colors="$HOME/.dircolors"
		test -r $colors && eval "$(dircolors -b $colors)"
		alias ls='ls --color=auto -Bpv'
		alias dir='dir --color=auto -pv'
	# }
	# Darwin {
	elif [ $PLATFORM = "Darwin" ] ; then
		# color support
		export CLICOLOR=1
		export LSCOLORS=ExGxCxDxCxegedabagacad
		export VIMRUNTIME='/Applications/MacVim.app/Contents/Resources/vim/runtime'
		export PATH=/usr/local/bin:$PATH # (mostly for exuberent ctags)
		# PATH DISPLAY variables for use with MacPorts
		export PATH=/opt/local/bin:/opt/local/sbin:$PATH

		# Setting PATH for EPD
		# The orginal version is saved in .bash_profile.pysave
		export PATH="/Library/Frameworks/EPD64.framework/Versions/Current/bin:${PATH}"
		export MKL_NUM_THREADS=1

		# Setting PATH for MacTeX
		export PATH=$PATH:/usr/texbin
	fi
	# }
# }

# Machine-specific settings {
	# Hydrogen {
	if [ $MACHINE = "hydrogen" ] ; then
		export PATH=/opt/bin:$PATH
		export PATH=/usr/sbin:$PATH
	# }
	fi
	# }
# }

# Domain-specific settings {
	# athena dev {
	if [ $DOMAIN = "athenahealth.com" ] ; then

		# General settings
		export LD_LIBRARY_PATH="/usr/X11R6/lib:"$LD_LIBRARY_PATH
		export NYTPROF=start=no

		# Perforce
		export P4CLIENT=$USER
		export P4PORT=perforce.athenahealth.com:1666
		export P4_HOME=/home/$USER/p4

		# If using perforce in windows, uncomment this line
		# export P4WINROOT=z:\\p4

		# If not using perforce in windows, uncomment these lines
		export P4LOCALROOT=$P4_HOME
		export P4WINROOT=$P4_HOME

		# Athena Home
		export ATHENA_HOME="$P4_HOME/prod"
		export MASTER_ROOT_INSTANCE=PTEST1
		export INTRANET_HOME="$P4_HOME/intranet"

		# Athena-specific config
		export EMAILINTERCEPTADDRESS="$USER@corp.athenahealth.com"
		export BARCODEWEBSERVICELOC=http://ars-anetsrv1.corp.athenahealth.com/perl/barcode/ws.pl
		export CURLPROXY=link1.athenahealth.com:8000
		export MEMCACHEDPOOL=DEV
		export FILEROOT=/home/$USER/fileroot
		export REDIRECT_PERL_FILEROOT=1
		export WIKI_HOME=/home/$USER/wiki
		export PATH="$HOME/bin:$P4_HOME/intranet/bin:$P4_HOME/techops/coredev/:$P4_HOME/techops/coredev/bin:$PATH"

		alias prettysql='/home/twilliams/bin/python /home/twilliams/bin/sqlformat --reindent'

		# Save the .bash_history with every command. (The default is to save only on
		# shell exit). -- from Sam Scarano via Miki on tech-tev.
		# export PROMPT_COMMAND='history -a; history -r'

		alias unharr='/usr/local/athena/techops/prodsys/patch/ctl stop'

		# Only uncomment this alias if you are using perforce with Windows and know that you need it.
		# It can cause unexpected problems on linux-only workflows
		# alias p4=auto_local_p4

		# navigation_utilities: defines common functions like 'build', 'define', 'devdb'...
		source /usr/local/athena/techops/coredev/utils/navigation_utilities.sh

		# uses navigation_utilities' function to set athenaNet environment variables
		# like $ATHENA_HOME and $MASTER_ROOT_INSTANCE
		build prod

		# aDL
		export ADL_BIN="$ATHENA_HOME/scripts/reports/anodyne/"
		export ADL_LIB="$ATHENA_HOME/perllib/Athena/Reports/Extract"
		export ADL_CRON="$ATHENA_HOME/perllib/Athena/Cron/Jobs/"
		export ab=$ADL_BIN;
		export al=$ADL_LIB;
		export ac=$ADL_CRON;

		# devnet
		export DEVNET_HOME=$AX_HOME/devnet
		
		# athenaWorker
		export WORKER_BIN="$ATHENA_HOME/scripts/app/platform"
		export RUNWORKUNITSINPROCESS=0
		export ISDEVSERVER=Y
	# }
	fi
	# }

# }


# Common Settings {
	# If not running interactively, don't do anything
	[ -z "$PS1" ] && return

	export HISTCONTROL=ignoreboth # ignore dupes and lines starting with spaces
	export HISTSIZE=5000 # number of stored commands

	# check the window size after each command and, if necessary,
	# update the values of LINES and COLUMNS.
	shopt -s checkwinsize

	#Vim keybindings
	set -o vi
	export EDITOR=vim
	
	# make less more friendly for non-text input files, see lesspipe(1)
	[ -x /usr/bin/lesspipe ] && eval "$(lesspipe)"

	# Aliases found in .bash_aliases
	if [ -f ~/.bash_aliases ]; then
		. ~/.bash_aliases
	fi

	# paths
	export PATH=$HOME/.local/bin:$PATH
	# installing python packages with
	#	setup.py install --user
	# installs scripts to ~/.local/bin, and modules to
	# ~/.local/lib/python*/site-packages and the PYTHONPATH is taken care of
	# automagically

	# LaTeX
	export BIBINPUTS=.:$HOME/etc/texmf/bibtex/bib

	# enable programmable completion features (you don't need to enable
	# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
	# sources /etc/bash.bashrc).
	if [ -f /etc/bash_completion ]; then
	    . /etc/bash_completion
	fi

	# tmux bash completion
	if [ -f ~/.tmux-completion.sh ]; then
		source ~/.tmux-completion.sh
	fi

	# git bash completion
	if [ -f ~/.git-completion.sh ]; then
		. ~/.git-completion.sh
	fi

	# git prompt help
	if [ -f ~/.git-prompt.sh ]; then
		. ~/.git-prompt.sh
		export GIT_PS1_SHOWDIRTYSTATE=1
		export GIT_PS1_SHOWSTASHSTATE=1
		export GIT_PS1_SHOWUNTRACKEDFILES=1
		export GIT_PS1_SHOWUPSTREAM="auto"
	fi

	# Prompt {
		# A note on the colors:
		#	\e[  - Indicates the beginning of color prompt
		#	x;ym - Indicates color code: x is foreground and y is background
		#	\e[m - indicates the end of color prompt
		# [Note: Replace 0 with 1 for dark color]

		# Candy colors
		candy_lime=154
		candy_gold=172
		candy_ruby=196
		candy_pink=200
		candy_tangerine=208
		candy_lemon=220
		candy_lavender=147
		candy_sky=123
		candy_darkgray=237
		candy_midgray=244
		candy_lightgray=250

		# Solarized colors
		# SOLARIZED       XTERM/HEX   16/8 TERMCOL  HEX     L*A*B      sRGB        HSB
		# --------------- ----------- ---- -------  ------- ---------- ----------- -----------
		solar_base03=234  #1c1c1c      8/4 brblack  #002b36 15 -12 -12   0  43  54 193 100  21
		solar_base02=235  #262626      0/4 black    #073642 20 -12 -12   7  54  66 192  90  26
		solar_base01=240  #4e4e4e     10/7 brgreen  #586e75 45 -07 -07  88 110 117 194  25  46
		solar_base00=241  #585858     11/7 bryellow #657b83 50 -07 -07 101 123 131 195  23  51
		solar_base0=244   #808080     12/6 brblue   #839496 60 -06 -03 131 148 150 186  13  59
		solar_base1=245   #8a8a8a     14/4 brcyan   #93a1a1 65 -05 -02 147 161 161 180   9  63
		solar_base2=254   #d7d7af      7/7 white    #eee8d5 92 -00  10 238 232 213  44  11  93
		solar_base3=230   #ffffd7     15/7 brwhite  #fdf6e3 97  00  10 253 246 227  44  10  99
		solar_yellow=136  #af8700      3/3 yellow   #b58900 60  10  65 181 137   0  45 100  71
		solar_orange=166  #d75f00      9/3 brred    #cb4b16 50  50  55 203  75  22  18  89  80
		solar_red=160     #d70000      1/1 red      #dc322f 50  65  45 220  50  47   1  79  86
		solar_magenta=125 #af005f      5/5 magenta  #d33682 50  65 -05 211  54 130 331  74  83
		solar_violet=61   #5f5faf     13/5 brmagenta#6c71c4 50  15 -45 108 113 196 237  45  77
		solar_blue=33     #0087ff      4/4 blue     #268bd2 55 -10 -45  38 139 210 205  82  82
		solar_cyan=37     #00afaf      6/6 cyan     #2aa198 60 -35 -05  42 161 152 175  74  63
		solar_green=64    #5f8700      2/2 green    #859900 60 -20  65 133 153   0  68 100  60

		function c {
			bold="00"
			if [[ $2 = "bold" ]]; then
				bold="01"
			fi
			echo "\[\e[$bold;38;5;${1}m\]"
		}

		user_c=$(c $solar_orange)
		host_c=$(c $solar_yellow)
		path_c=$(c $solar_green bold)
		tag_c=$(c $solar_cyan)
		prompt_c=$(c $solar_base1)
		default_c='\[\e[0m\]' # Resets to default term color

		if $is_root ; then
			prompt_c=$(c $candy_ruby)
			user_c=$(c $candy_ruby)
		fi

		# Git tag is just too slow
		git_tag=''

		athena_tag=''
		if [[ "$DOMAIN" = "athenahealth.com" ]]; then 
			athena_tag="[$BUILDNAME $MASTER_ROOT_INSTANCE]"
		fi

		export PS1="\n$user_c\u$prompt_c@$host_c\h$prompt_c:$tag_c$athena_tag $path_c\w \n$prompt_c\\\$$default_c "
	# }

# }
