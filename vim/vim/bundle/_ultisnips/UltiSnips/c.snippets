snippet ** "Comment"
/* ${VISUAL}$1 */${0}
endsnippet

snippet Inc "#include local header (Inc)" !b
#include "${1:`!p snip.rv = snip.basename`}.h"${0}
endsnippet

snippet inc "#include <> (inc)" !b
#include <${1:stdio}.h>${0}
endsnippet

snippet def "#define SYMBOL" !b
#define ${1:SYMBOL}${0}
endsnippet

snippet "func?" "Function definition" !r
/* ${1: Description} */
${2:static }${3:void} ${4:function}(${5})
{
${6:${VISUAL:	exit(1);	\/* TODO *\/}}
}${0}
endsnippet

snippet fori "for int loop (fori)" !
for (${4:int} ${2:i} = 0; $2 < ${1:count}; ${3:++$2}) {
	${0:/* code */}
}
endsnippet

snippet for "for loop (for)" !
for (${2:i} = 0; $2 < ${1:count}; ${3:++$2}) {
	${0:/* code */}
}
endsnippet

snippet while "while loop" !
while (${1}) {
	${0:/* code */}
}
for (${2:i} = 0; $2 < ${1:count}; ${3:++$2}) {
	${0:/* code */}
}
endsnippet

snippet if "if .. (if)" !
if (${1:/* condition */}) {
	${2:/* code */}
}${3:${0}}
endsnippet

snippet elif "else if.. " !
else if (${1:/* condition */}) {
	${2:/* code */}
}${3:${0}}
endsnippet

snippet el "else .. " !
else {
	${1:/* code */}
}${2:${0}}
endsnippet

snippet st "struct" !
struct ${1:`!p snip.rv = (snip.basename or "name") + "_t"`} {
	${0:/* data */}
};
endsnippet

snippet pr "printf .. (printf)"
printf("${1:%s}\n"${1/([^%]|%%)*(%.)?.*/(?2:, :\);)/}$2${1/([^%]|%%)*(%.)?.*/(?2:\);)/}
endsnippet

snippet lock "pthread mutex lock" !b
pthread_mutex_lock(${1:&mutex});
${0}
pthread_mutex_unlock($1);
endsnippet

snippet unlock "pthread mutex unlock" !b
pthread_mutex_unlock(${1:&mutex});${0}
endsnippet

snippet signal "pthread signal" !b
pthread_cond_signal(${1:&condvar});${0}
endsnippet

snippet broadcast "pthread broadcast" !b
pthread_cond_broadcast(${1:&condvar});${0}
endsnippet

snippet wait "pthread wait" !b
pthread_cond_wait(${1:&condvar}, ${2:&mutex});${0}
endsnippet
