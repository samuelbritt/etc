snippet ** "Comment" !
/* ${VISUAL}$1 */$0
endsnippet

snippet Inc "#include local header (Inc)" !b
#include "${1:`!p snip.rv = snip.basename`}.h"$0
endsnippet

snippet inc "#include <> (inc)" !b
#include <${1:stdio}.h>$0
endsnippet

snippet sz "sizeof" !i
sizeof(${1:${VISUAL}})$0
endsnippet

snippet def "#define SYMBOL" !b
#define ${1:SYMBOL}$0
endsnippet

snippet "func?" "Function definition" !br
/* ${1:description} */
${2:static }${3:void}
${4:function}(${5})
{
	${6:${VISUAL:exit(1);	\/* TODO *\/}}
}$0
endsnippet

snippet fori "for int loop (fori)" !b
for (${4:int} ${2:i} = 0; $2 < ${1:count}; ${3:++$2}) {
	${5:${VISUAL:\/* code *\/}}
}$0
endsnippet

snippet for "for loop (for)" !b
for (${2:i} = 0; $2 < ${1:count}; ${3:++$2}) {
	${4:${VISUAL:\/* code *\/}}
}$0
endsnippet

snippet while "while loop" !b
while (${1:/* condition */}) {
	${2:${VISUAL:\/* code *\/}}
}$0
endsnippet

snippet if "if .. (if)" !
if (${1:/* condition */}) {
	${2:${VISUAL:\/* code *\/}}
}$0
endsnippet
# ${3:${0}}
snippet elif "else if.. " !
else if (${1:/* condition */}) {
	${2:${VISUAL:\/* code *\/}}
}$0
endsnippet

snippet el "else .. " !
else {
	${1:${VISUAL:\/* code *\/}}
}$0
endsnippet

snippet st "struct" !w
struct
endsnippet

snippet struct "struct" !b
struct ${1:`!p snip.rv = (snip.basename or "name")`} {
	${2:/* data */}
};$0
endsnippet

snippet tds "typedef struct" !b
typedef struct ${1:`!p snip.rv = (snip.basename or "name")`} {
	${0:/* data */}
} ${2:$1_t};
endsnippet

snippet enum "enum" !b
enum ${1:name} {
	${2:/* data */}
};$0
endsnippet

snippet pr "printf .. (printf)" !b
printf("${1:%s}\n"${1/([^%]|%%)*(%.)?.*/(?2:, :\);)/}$2${1/([^%]|%%)*(%.)?.*/(?2:\);)/}
endsnippet

snippet fpr "fprintf .. (fprintf)" !b
fprintf(${1:stderr}, "${2:%s}\n"${2/([^%]|%%)*(%.)?.*/(?2:, :\);)/}$3${2/([^%]|%%)*(%.)?.*/(?2:\);)/}
endsnippet

snippet lock "pthread mutex lock" !b
pthread_mutex_lock(${1:&mutex});
${0:${VISUAL}}
pthread_mutex_unlock($1);
endsnippet

snippet unlock "pthread mutex unlock" !b
pthread_mutex_unlock(${1:&mutex});${0}
endsnippet

snippet signal "pthread signal" !b
pthread_cond_signal(${1:${VISUAL:&condvar}});${0}
endsnippet

snippet broadcast "pthread broadcast" !b
pthread_cond_broadcast(${1:&condvar});${0}
endsnippet

snippet wait "pthread wait" !b
pthread_cond_wait(${1:&condvar}, ${2:&mutex});${0}
endsnippet
